import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as n,o as l}from"./app-1-qcP78a.js";const h={};function t(k,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="_1-flutter-通过-new-plugin-创建-语言要选-swift-模版进行修改" tabindex="-1"><a class="header-anchor" href="#_1-flutter-通过-new-plugin-创建-语言要选-swift-模版进行修改"><span>1. flutter 通过 new plugin 创建(语言要选 swift)模版进行修改</span></a></h2><p>encryptIos_until.dart</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;encrypt_ios_platform_interface.dart&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;package:encrypt_ios/encrypt_ios_until.dart&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EncryptIosUntil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  String</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  String</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> IV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  EncryptIosUntil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;xxxxxxxxxxxxxxxx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IV</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;vvvvvvvvvvvvvvvv&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//这里是配置默认的key和iv，各16字节</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">encryptStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">required</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv}){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EncryptIosPlatform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.instance.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">encryptStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">??</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,iv</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">??</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,str);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">decryptStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">required</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv}){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EncryptIosPlatform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.instance.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">decryptStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">??</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,iv</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">??</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,str);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">encryptFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">required</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">required</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv}){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EncryptIosPlatform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.instance.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">encryptFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">??</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,iv</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">??</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, src, desc);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">decryptFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">required</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">required</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv}){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EncryptIosPlatform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.instance.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">decryptFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">??</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,iv</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">??</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, src, desc);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>encrypt_ios_platform_interface.dart</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;package:plugin_platform_interface/plugin_platform_interface.dart&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;encrypt_ios_method_channel.dart&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">abstract</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EncryptIosPlatform</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> PlatformInterface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  EncryptIosPlatform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(token</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> _token);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> _token </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EncryptIosPlatform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> _instance </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MethodChannelEncryptIos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EncryptIosPlatform</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> instance =&gt; _instance;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> set</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> instance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">EncryptIosPlatform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> instance) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    PlatformInterface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">verifyToken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(instance, _token);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    _instance </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> instance;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">encryptStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    throw</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> UnimplementedError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;encryptStr() has not been implemented.&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">decryptStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    throw</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> UnimplementedError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;decryptStr() has not been implemented.&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">encryptFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    throw</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> UnimplementedError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;encryptFile() has not been implemented.&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">decryptFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    throw</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> UnimplementedError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;decryptFile() has not been implemented.&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>encrypt_ios_method_channel.dart</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;package:flutter/foundation.dart&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;package:flutter/services.dart&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;encrypt_ios_platform_interface.dart&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/// An implementation of </span><span style="--shiki-light:#E45649;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">[EncryptIosPlatform]</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> that uses method channels.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MethodChannelEncryptIos</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EncryptIosPlatform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  /// The method channel used to interact with the native platform.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @visibleForTesting</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  final</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> methodChannel </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MethodChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;encrypt_ios&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @override</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">encryptStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    final</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> enStr </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> methodChannel.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">invokeMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;encryptStr&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">dynamic</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;key&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;iv&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;str&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> enStr;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @override</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">decryptStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    final</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> deStr </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> methodChannel.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">invokeMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;decryptStr&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">dynamic</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;key&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;iv&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;str&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> deStr;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @override</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">decryptFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    final</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> methodChannel.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">invokeMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;decryptFile&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">dynamic</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;key&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;iv&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;src&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;desc&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @override</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">encryptFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    final</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> methodChannel.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">invokeMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;encryptFile&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">dynamic</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;key&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;iv&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;src&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;desc&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-通过-xcode-打开-example-中的-ios-的-xcworkspace-文件打开项目-强烈建议不要在-android-studio-内写-swift-代码" tabindex="-1"><a class="header-anchor" href="#_2-通过-xcode-打开-example-中的-ios-的-xcworkspace-文件打开项目-强烈建议不要在-android-studio-内写-swift-代码"><span>2. 通过 Xcode 打开 example 中的 ios 的.xcworkspace 文件打开项目（强烈建议不要在 Android studio 内写 swift 代码）</span></a></h2><p><img src="https://github.com/B2-4ac-1234/blog/blob/main/src/.vuepress/public/assets/images/flutter/Xcode_open_xcworkspace_pod_encrypt_podspec.png?raw=true" alt="encrypt.podspec" loading="lazy"><br> 添加 s.dependency &#39;CommonCryptoModule&#39;</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># To learn more about a Podspec see http://guides.cocoapods.org/syntax/podspec.html.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Run \`pod lib lint encrypt.podspec\` to validate before publishing.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Pod::Spec.new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  s.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">             =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;encrypt&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  s.version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;0.0.1&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  s.summary</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;A new Flutter project.&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  s.description</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">DESC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">A new Flutter project.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       DESC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.homepage         = &#39;http://example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.license          = { :file =&gt; &#39;../LICENSE&#39; }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.author           = { &#39;Your Company&#39; =&gt; &#39;email@example.com&#39; }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.source           = { :path =&gt; &#39;.&#39; }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.source_files = &#39;Classes/**/*&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.dependency &#39;Flutter&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.dependency &#39;CommonCryptoModule&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.platform = :ios, &#39;9.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  # Flutter.framework does not contain a i386 slice.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.pod_target_xcconfig = { &#39;DEFINES_MODULE&#39; =&gt; &#39;YES&#39;, &#39;EXCLUDED_ARCHS[sdk=iphonesimulator*]&#39; =&gt; &#39;i386&#39; }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  s.swift_version = &#39;5.0&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-通过-cmd-运行-在-example-ios-内运行-pod-install-避免导入-commoncrypto-头文件产生复杂操作" tabindex="-1"><a class="header-anchor" href="#_3-通过-cmd-运行-在-example-ios-内运行-pod-install-避免导入-commoncrypto-头文件产生复杂操作"><span>3. 通过 cmd 运行（在 example/ios 内运行） pod install （避免导入 CommonCrypto 头文件产生复杂操作）</span></a></h2><p>搜索 Swift 找到对应的.swift 文件进行修改<br> SwiftEncrypIosPlugin.swift</p><div class="language-swift line-numbers-mode" data-highlighter="shiki" data-ext="swift" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Flutter</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> UIKit</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> CryptoSwift</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> CommonCrypto</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> SwiftEncryptIosPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">NSObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">FlutterPlugin </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> register</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">with</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;"> registrar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: FlutterPluginRegistrar) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> channel = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FlutterMethodChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;encrypt_ios&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">binaryMessenger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: registrar.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">messenger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> instance = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SwiftEncryptIosPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        registrar.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addMethodCallDelegate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(instance, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: channel)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> handle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">_</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;"> call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: FlutterMethodCall, </span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@escaping</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FlutterResult) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //传入参数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> arg = call.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">arguments</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //获取必要的key与iv</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> args = arg as? [</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;"> Any</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key = args[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;key&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] as? </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> iv = args[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;iv&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] as? </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> keyData = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: key, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: key.count)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ivData = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: iv, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: iv.count)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> call.method {</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//区分调用方法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;encryptStr&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str = args[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;str&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] as? </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                    debugPrint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;encryptStr-&gt;str:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+str)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> deData = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">aesCBC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">operation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: kCCEncrypt, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: str.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: str.count), </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">keyData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: keyData, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ivData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: ivData)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                    debugPrint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;encryptStr-&gt;destr:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+deData.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">base64EncodedString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                    result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deData.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">base64EncodedString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//编码base64返回，与Android端相同</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                    result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FlutterError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;iOS could not extract &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                                        &quot;flutter arguments in method: (encryptStr),missing parameter &#39;str&#39;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">details</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;decryptStr&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str = args[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;str&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] as? </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                    debugPrint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;decryptStr-&gt;str:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+str)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> strData = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">base64Encoded</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: str)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//需要先解码base64，再进行解密</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> deData = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">aesCBC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">operation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: kCCDecrypt, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:strData!, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">keyData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: keyData, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ivData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: ivData)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> deStr = </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: deData.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.utf8)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//转utf-8输出</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                    debugPrint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;decryptStr-&gt;destr:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,deStr)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                    result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deStr)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                    result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FlutterError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;iOS could not extract &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                                        &quot;flutter arguments in method: (encryptStr),missing parameter &#39;str&#39;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">details</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;encryptFile&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src = args[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] as? </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc = args[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;desc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] as? </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> isSuccess = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        isSuccess = </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">try</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> aesCBCFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">operation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: kCCEncrypt, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">keyData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: keyData, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ivData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: ivData, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">_srcPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: src, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">_descPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: desc)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                        result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(isSuccess)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                        result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FlutterError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: error.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">localizedDescription</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">details</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                    result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FlutterError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;iOS could not extract &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                                        &quot;flutter arguments in method: (encryptFile),missing parameter &#39;src/desc&#39;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">details</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;decryptFile&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src = args[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] as? </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc = args[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;desc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] as? </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> isSuccess = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        isSuccess = </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">try</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> aesCBCFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">operation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: kCCDecrypt, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">keyData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: keyData, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ivData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: ivData, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">_srcPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: src, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">_descPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: desc)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                        result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(isSuccess)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                        result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FlutterError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: error.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">localizedDescription</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">details</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                    result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FlutterError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;iOS could not extract &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                                        &quot;flutter arguments in method: (decryptFile),missing parameter &#39;src/desc&#39;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">details</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                default</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> :</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;iOS &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> + UIDevice.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">systemVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FlutterError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;iOS could not extract &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                                &quot;flutter arguments in : missing parameter(key or iv)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">details</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // AES加解密</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> aesCBC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">operation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:Data, </span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">keyData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: Data, </span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">ivData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: Data) -&gt; Data {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dataLength = data.count</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cryptLength  = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">size_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(dataLength + kCCBlockSizeAES128)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cryptData = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:cryptLength)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> keyLength = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">size_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(kCCKeySizeAES128)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> options = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CCOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(kCCOptionPKCS7Padding)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> numBytesEncrypted :size_t = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cryptStatus = cryptData.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withUnsafeMutableBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {cryptBytes </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                                            data.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withUnsafeBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {dataBytes </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                  ivData.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withUnsafeBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {ivBytes </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                        keyData.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withUnsafeBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {keyBytes </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                                             CCCrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CCOperation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(operation),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                                CCAlgorithm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(kCCAlgorithmAES),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                options,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                keyBytes, keyLength,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                ivBytes,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                dataBytes, dataLength,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                cryptBytes, cryptLength,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                &amp;numBytesEncrypted)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                       }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                                           }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> UInt32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(cryptStatus) == </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UInt32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(kCCSuccess) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            cryptData.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">removeSubrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(numBytesEncrypted..&lt;cryptData.count)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Error: </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\\(</span><span style="--shiki-light:#50A14F;--shiki-dark:#ABB2BF;">cryptStatus</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cryptData;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> aesCBCFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">operation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">keyData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: Data, </span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">ivData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: Data, </span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">_srcPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#4078F2;--shiki-light-font-style:inherit;--shiki-dark:#61AFEF;--shiki-dark-font-style:italic;">_descPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">throws</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        debugPrint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;FileSrc:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+_srcPath)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        debugPrint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;FileDesc:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+_descPath)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> startTime = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CFAbsoluteTimeGetCurrent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//记录方法开始时间</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> !(FileManager.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fileExists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">atPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: _srcPath)) {</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//判断源文件是否存在</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            throw</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> URLError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(URLError.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cannotWriteToFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">userInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;message&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;can&#39;t find file by srcPath&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> inputStream = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fileAtPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: _srcPath)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> inputStream == </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//判断源文件流是否存在</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            throw</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> URLError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(URLError.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cannotWriteToFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">userInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;message&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;can&#39;t find file by srcPath&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> srcFileSize : </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> src = </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FileManager.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">attributesOfItem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">atPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: _srcPath)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        srcFileSize = </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(src[FileAttributeKey.size] as! </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UInt64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        debugPrint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Begin,SrcFileSize:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,srcFileSize)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //初始化目标文件流,如果存在目标文件，进行移除</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FileManager.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fileExists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">atPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: _descPath)){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FileManager.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">removeItem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">atPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: _descPath)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        FileManager.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">atPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: _descPath, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">contents</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> outputStream = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toFileAtPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: _descPath, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)!</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        outputStream.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //初始化加解密</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> keyLength = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">size_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(kCCKeySizeAES128)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> options = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CCOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(kCCOptionPKCS7Padding)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cryptor: CCCryptorRef?</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //        defer {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //            CCCryptorRelease(cryptor)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> status = keyData.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withUnsafeBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {keyBytes </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                              ivData.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withUnsafeBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {ivBytes </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                                    CCCryptorCreate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CCOperation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(operation), </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CCAlgorithm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(kCCAlgorithmAES), options, keyBytes, keyLength, ivBytes, &amp;cryptor)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                   }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                             }</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//创建加解密对象</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        inputStream?.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//开启输入流</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bufused = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//bufused为实际加解密所进行的字符个数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> finalPointer:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UnsafeMutablePointer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UInt8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; = </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UnsafeMutablePointer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UInt8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">allocate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">capacity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//保存CCCryptorUpdate的结果</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bufferSize = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1024</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//缓冲区大小</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> inputStream!.hasBytesAvailable{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> buffer = </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UnsafeMutablePointer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UInt8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">allocate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">capacity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: bufferSize)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//缓冲区</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> read = inputStream!.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(buffer, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">maxLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: bufferSize)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//读取数据流到缓冲区</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (read == </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                buffer.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">deallocate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//清空缓冲区</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                break</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> readData = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: buffer, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: read)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> readLength  = readData.count</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> resultLength = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">size_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(readData.count + kCCBlockSizeAES128)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//保存加解密后数组的长度</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> updateData = [</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UInt8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">](</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">repeating</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: resultLength)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//保存加解密后的数据</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cryptStatus = readData.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withUnsafeBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {readBytes </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                                                        CCCryptorUpdate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(cryptor, readBytes, readLength, &amp;updateData, resultLength , &amp;bufused)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//进行加解密</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                                       }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> UInt32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(cryptStatus) == </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UInt32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(kCCSuccess) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                updateData.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">removeSubrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(bufused..&lt;resultLength)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//保存实际进行的加解密个数，去除原本多余的字符</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Error: </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\\(</span><span style="--shiki-light:#50A14F;--shiki-dark:#ABB2BF;">cryptStatus</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            outputStream.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(updateData, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">maxLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: updateData.count)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//写入文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            finalPointer.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: updateData, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//记录修改,直接地址相连接，避免了内存溢出</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            buffer.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">deallocate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//清空缓冲区</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //数据读取完毕,关闭读取文件流</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        inputStream!.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        CCCryptorFinal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(cryptor, finalPointer, srcFileSize, &amp;bufused)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//通过CCCryptorFinal可以获得srcFileSize-updateResult.count大小的且合并后不影响updateResult的数组</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        CCCryptorRelease</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(cryptor)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//释放内存</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bufferPointer = </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UnsafeMutableBufferPointer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: finalPointer, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: bufused)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//截取有效地址</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result = outputStream.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(bufferPointer), </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">maxLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: bufused)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//转为数组并写入文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //数据写入完毕,关闭写入文件流</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        outputStream.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> descFileSize : </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> desc = </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FileManager.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">attributesOfItem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">atPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: _descPath)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        descFileSize = </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(desc[FileAttributeKey.size] as! </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">UInt64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        debugPrint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Finish,DescFileSize:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,descFileSize)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //记录结束时间</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> endTime = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CFAbsoluteTimeGetCurrent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        debugPrint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;aesCBCFile Function usage time ：%.2f second&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (endTime - startTime)))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-最重要的一点-最外层-pubspec-yaml-内-ios-平台的要指定到自己编写的-swift-文件" tabindex="-1"><a class="header-anchor" href="#_4-最重要的一点-最外层-pubspec-yaml-内-ios-平台的要指定到自己编写的-swift-文件"><span>4. 最重要的一点，最外层 pubspec.yaml 内 IOS 平台的要指定到自己编写的.swift 文件！</span></a></h2><p>pubspec.yaml</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">flutter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  platforms</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  	# android:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  	# 	</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">com.handcent.encrypt</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  	# 	</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pluginClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">EncryptUntil</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  	ios</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  		pluginClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SwiftEncrypIosPlugin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转载请注明出处</p>`,17)]))}const r=i(h,[["render",t]]),d=JSON.parse(`{"path":"/posts/flutter/Flutter-IOS(swift)%E5%B9%B3%E5%8F%B0-AES8%E5%8A%A0%E8%A7%A3%E5%AF%86%EF%BC%88PKCS7%E6%A8%A1%E5%BC%8F%EF%BC%89%E5%A4%A7%E6%96%87%E4%BB%B6%E5%AE%9E%E7%8E%B0.html","title":"Flutter IOS(swift)平台 AES8加解密（PKCS7模式）大文件实现","lang":"zh-CN","frontmatter":{"icon":"swift","date":"2023-06-09T00:00:00.000Z","title":"Flutter IOS(swift)平台 AES8加解密（PKCS7模式）大文件实现","category":["flutter"],"tag":["flutter","ios","swift"],"star":true,"footer":"桀桀解...","description":"1. flutter 通过 new plugin 创建(语言要选 swift)模版进行修改 encryptIos_until.dart encrypt_ios_platform_interface.dart encrypt_ios_method_channel.dart 2. 通过 Xcode 打开 example 中的 ios 的.xcworkspa...","head":[["meta",{"property":"og:url","content":"https://B2-4AC-1234.github.io/posts/flutter/Flutter-IOS(swift)%E5%B9%B3%E5%8F%B0-AES8%E5%8A%A0%E8%A7%A3%E5%AF%86%EF%BC%88PKCS7%E6%A8%A1%E5%BC%8F%EF%BC%89%E5%A4%A7%E6%96%87%E4%BB%B6%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"Flutter IOS(swift)平台 AES8加解密（PKCS7模式）大文件实现"}],["meta",{"property":"og:description","content":"1. flutter 通过 new plugin 创建(语言要选 swift)模版进行修改 encryptIos_until.dart encrypt_ios_platform_interface.dart encrypt_ios_method_channel.dart 2. 通过 Xcode 打开 example 中的 ios 的.xcworkspa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/B2-4ac-1234/blog/blob/main/src/.vuepress/public/assets/images/flutter/Xcode_open_xcworkspace_pod_encrypt_podspec.png?raw=true"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T07:19:42.000Z"}],["meta",{"property":"article:tag","content":"flutter"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:published_time","content":"2023-06-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-05T07:19:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flutter IOS(swift)平台 AES8加解密（PKCS7模式）大文件实现\\",\\"image\\":[\\"https://github.com/B2-4ac-1234/blog/blob/main/src/.vuepress/public/assets/images/flutter/Xcode_open_xcworkspace_pod_encrypt_podspec.png?raw=true\\"],\\"datePublished\\":\\"2023-06-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-05T07:19:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"B2-4AC\\",\\"url\\":\\"https://github.com/B2-4ac-1234?tab=repositories\\"}]}"]]},"git":{"createdTime":1709623182000,"updatedTime":1709623182000,"contributors":[{"name":"B2-4AC","username":"B2-4AC","email":"tg409627310@outlook.com","commits":1,"url":"https://github.com/B2-4AC"}]},"readingTime":{"minutes":5.65,"words":1694},"filePathRelative":"posts/flutter/Flutter-IOS(swift)平台-AES8加解密（PKCS7模式）大文件实现.md","localizedDate":"2023年6月9日","excerpt":"<h2>1. flutter 通过 new plugin 创建(语言要选 swift)模版进行修改</h2>\\n<p>encryptIos_until.dart</p>\\n<div class=\\"language-dart line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"dart\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">import</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 'encrypt_ios_platform_interface.dart'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">export</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 'package:encrypt_ios/encrypt_ios_until.dart'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">class</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> EncryptIosUntil</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">  String</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> KEY</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">  String</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> IV</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">  EncryptIosUntil</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">({</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">this</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">KEY</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \\"xxxxxxxxxxxxxxxx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">this</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">IV</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \\"vvvvvvvvvvvvvvvv\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">});</span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">//这里是配置默认的key和iv，各16字节</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">  Future</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">?&gt; </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">encryptStr</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">({</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">required</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> str,</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> key, </span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> iv}){</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">    return</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> EncryptIosPlatform</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.instance.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">encryptStr</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(key</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">??</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">KEY</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,iv</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">??</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">IV</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,str);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">  Future</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">?&gt; </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">decryptStr</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">({</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">required</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> str,</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> key, </span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> iv}){</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">    return</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> EncryptIosPlatform</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.instance.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">decryptStr</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(key</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">??</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">KEY</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,iv</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">??</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">IV</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,str);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">  Future</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">bool</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">?&gt; </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">encryptFile</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">({</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">required</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> src,</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">required</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> desc,</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> key, </span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> iv}){</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">    return</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> EncryptIosPlatform</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.instance.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">encryptFile</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(key</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">??</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">KEY</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,iv</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">??</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">IV</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, src, desc);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">  Future</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">bool</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">?&gt; </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">decryptFile</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">({</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">required</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> src,</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">required</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> desc,</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> key, </span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> iv}){</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">    return</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> EncryptIosPlatform</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.instance.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">decryptFile</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(key</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">??</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">KEY</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,iv</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">??</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">IV</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, src, desc);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{r as comp,d as data};
